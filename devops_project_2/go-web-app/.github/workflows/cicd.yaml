name: CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go 1.22
      uses: actions/setup-go@v2
      with:
        go-version: 1.22

    - name: Debug directory structure
      run: |
        pwd
        find . -type d | sort
        find . -name "*.go" | sort
        find . -name "go.mod" | sort

    - name: Initialize Go module if needed
      run: |
        cd devops_project_2/go-web-app
        if [ ! -f "go.mod" ]; then
          go mod init github.com/shaluchan/DevOps/devops_project_2/go-web-app
        fi
        go mod tidy


    - name: Build Go application
      run: |
        # First try to find the directory with main.go
        MAIN_DIR=$(find . -name "main.go" -exec dirname {} \;)
        echo "Found main.go in: $MAIN_DIR"
        
        cd $MAIN_DIR

        if [ ! -f "go.mod" ]; then
         echo "Creating go.mod file"
         go mod init github.com/shaluchan/DevOps
         go mod tidy
        fi
        go build -o go-web-app

    - name: Verify Build Output
      run: |
        find . -name "go-web-app" -type f
 
    - name: Test
      working-directory: devops_project_2/go-web-app
      run: go test ./...
  
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.56.2
  
  push:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push action
      uses: docker/build-push-action@v6
      with:
        context: devops_project_2/go-web-app
        file: devops_project_2/go-web-app/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{github.run_id}}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest

    needs: push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Update tag in Helm chart
      run: |
        sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/go-web-app-chart/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.email "singhshalu7656@gmail.com"
        git config --global user.name "shaluchan"
        git add helm/go-web-app-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push
